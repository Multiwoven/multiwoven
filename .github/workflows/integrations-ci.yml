name: CI - Integrations

on:
  push:
    branches:
      - main
    paths:
      - "integrations/**"

  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]
    paths:
      - "integrations/**"

env:
  CI: true
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: [3.2.0]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}

      - name: Update package list
        run: sudo apt update

      - name: Download and Extract DuckDB ODBC driver
        run: |
            wget -O duckdb.zip https://github.com/duckdb/duckdb/releases/download/v1.0.0/libduckdb-linux-amd64.zip
            unzip duckdb.zip -d libduckdb
            sudo mv libduckdb/duckdb.* /usr/local/include
            sudo mv libduckdb/libduckdb.so /usr/local/lib
            sudo ldconfig /usr/local/lib

      - name: Download and Install Oracle Instant Client
        run: |
            wget http://ftp.debian.org/debian/pool/main/liba/libaio/libaio1_0.3.113-4_amd64.deb
            sudo dpkg -i libaio1_0.3.113-4_amd64.deb
            sudo apt-get install -f
            sudo apt-get install -y alien unixodbc-dev
            wget http://yum.oracle.com/repo/OracleLinux/OL7/oracle/instantclient/x86_64/getPackage/oracle-instantclient19.6-basic-19.6.0.0.0-1.x86_64.rpm
            wget http://yum.oracle.com/repo/OracleLinux/OL7/oracle/instantclient/x86_64/getPackage/oracle-instantclient19.6-devel-19.6.0.0.0-1.x86_64.rpm
            sudo alien -i --scripts oracle-instantclient*.rpm
            rm -f oracle-instantclient*.rpm
            echo "export LD_LIBRARY_PATH=/usr/lib/oracle/19.6/client64/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
            echo "export C_INCLUDE_PATH=/usr/include/oracle/19.6/client64:$C_INCLUDE_PATH" >> $GITHUB_ENV
            echo "export CPLUS_INCLUDE_PATH=/usr/include/oracle/19.6/client64:$CPLUS_INCLUDE_PATH" >> $GITHUB_ENV

      - name: Install FreeTDS for TinyTDS gem
        run: |
          sudo apt-get install libc6-dev
          wget http://www.freetds.org/files/stable/freetds-1.4.10.tar.gz
          tar -xzf freetds-1.4.10.tar.gz
          cd freetds-1.4.10
          ./configure --prefix=/usr/local --with-tdsver=7.4
          sudo make
          sudo make install

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3
        working-directory: ./integrations

      - name: Run tests with code coverage
        run: COVERAGE=true bundle exec rake
        working-directory: ./integrations

      - name: Install Code Climate Test Reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
        working-directory: ./integrations

      - name: Push coverage data to Code Climate
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID_INTEGRATIONS }}
        run: |
          ./cc-test-reporter before-build
          ./cc-test-reporter after-build --exit-code $?
        working-directory: ./integrations
