#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative "setup"

TemporalService.setup

worker = Temporal::Worker.new

worker.register_workflow(Workflows::SyncWorkflow)
worker.register_workflow(Workflows::ScheduleSyncWorkflow)
worker.register_workflow(Workflows::TerminateWorkflow)

# worker.add_workflow_task_middleware(Middlewares::DatabaseMiddleware)
# Disabled due to sync workflow failures in staging.
# The middleware appears to be causing connection pooling issues, resulting in errors like:
# "There is an issue connecting with your hostname: <hostname>. Please check your database configuration and
# ensure there is a valid connection to your database."
# Occasionally, the fetch sync activity also fails to retrieve the sync using the provided sync ID.
# Further investigation is needed to understand the impact of DatabaseMiddleware on
# database connections and workflow execution.

worker.register_activity(Activities::FetchSyncActivity)
worker.register_activity(Activities::CreateSyncRunActivity)
worker.register_activity(Activities::ExtractorActivity)
worker.register_activity(Activities::LoaderActivity)
worker.register_activity(Activities::ReporterActivity)
worker.register_activity(Activities::ScheduleSyncActivity)
worker.register_activity(Activities::TerminateWorkflowActivity)

# TODO: add logging middleware to all workflows and activities

worker.add_workflow_task_middleware(Middlewares::LoggingMiddleware, "MULTIWOVEN")
worker.add_activity_middleware(Middlewares::LoggingMiddleware, "MULTIWOVEN")
worker.add_workflow_middleware(Middlewares::UpdateSyncRunStatusMiddleware)

Utils::HealthChecker.run

worker.start
